#!/bin/bash
# This is a helper script that checks build files and only runs clang-tidy on files that aren't
# autogenerated.

# Parse all arguments to find the source file
SOURCE_FILE=""
ARGS=()

while [[ $# -gt 0 ]]; do
  case $1 in
    -o|--output)
      shift # skip the output file
      ;;
    -c)
      # Next argument should be the source file
      SOURCE_FILE="$2"
      ARGS+=("$1")
      ;;
    *.cpp|*.cc|*.cxx|*.c++|*.C|*.c)
      SOURCE_FILE="$1"
      ARGS+=("$1")
      ;;
    *.h|*.hh|*.hxx|*.hpp|*.H|*.h++|*.tcc)
      SOURCE_FILE="$1"
      ARGS+=("$1")
      ;;
    *)
      ARGS+=("$1")
      ;;
  esac
  shift
done

# Check if this is a generated file that should be skipped
if [[ -n "$SOURCE_FILE" ]] && { 
  [[ "$SOURCE_FILE" == *"lot-manager_autogen"* ]] || 
  [[ "$SOURCE_FILE" == *"moc_"* ]] || 
  [[ "$SOURCE_FILE" == *"ui_"* ]] || 
  [[ "$SOURCE_FILE" == *"qrc_"* ]] || 
  [[ "$SOURCE_FILE" == *"mocs_compilation.cpp"* ]] || 
  [[ "$SOURCE_FILE" == *".moc"* ]]; 
}; then
  echo "Skipping clang-tidy for generated file: $SOURCE_FILE"
  exit 0
fi

# Run clang-tidy with all original arguments
exec clang-tidy "${ARGS[@]}"
